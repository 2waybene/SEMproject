##
##  History: originally named IFNAR1_analysis.R
##           then:IFNAR1_analysis_v2.R
##
#            in this practice, I am elaborating on all the cases:
##  Case-I:
##        We assumed three genotypes AA AB BB, with these three genotypes
##        We tested: additive effects with glm (logistic model) assuming
##        genetic mode, 0, 1, 2 case. The p-value will be similar to the
##        trend test
##        Cohr
##=========================================================================
setwd ("x:/project2018/RSV_association_study/study_with_IFNAR1/")
source ("analysisFuncs.R")
##=========================================
##  Prepare the association analysis data
##=========================================
load("SNP_file_BPIIFA1_to_MYD88.rda")
load("clinic_dt.rda")
SNP_ifnar1 = "seq.rs2257167"
column2use = which(colnames(sheetIN) %in% SNP_ifnar1)
snp.name = SNP_ifnar1
#column2use
SAT_phenotype_col =  6
#snp.name <- colnames(sheetIN)[column2use]
#snp.name
geno.pheno <- cbind(sheetIN[,column2use], dt[,SAT_phenotype_col])
geno.pheno <- as.data.frame(geno.pheno)
##==================================================
##  This is VERY important that for now we HAVE TO
##  flip the genotype coding!
##  Genotyp coding scema:
##                0 : homozygous reference allele
##                1 : heterozygous ref/SNP
##                2 : homozygous variant allele
##==================================================
geno.pheno <-  abs (geno.pheno[,1] - 2)
table (geno.pheno[,1])
##=========================================================================
##  File: IFNAR1_analysis_manuscript_part_1.R
##
##  Author: Jianying Li
##  Purpose: to analyze the association of the genetic effect of
##           a functional/coding SNP "rs2257167" on the disease
##           phenotypes (severe vs. mild), and generate odds
##           ratio and confident interval
##  Comment: this study was originally from the Golden Gate project
##           from 2016 with major analytical component in the
##           analysisFuncs.R. There are five panels for genotyping
##           only one "BPIIFA1(PLUNC) to MYD88" has this SNP.
##
##           Genotyp coding scema:
##                0 : homozygous reference allele
##                1 : heterozygous ref/SNP
##                2 : homozygous variant allele
##
##           In the convention, normally 0 refers to the "minor allele"
##           which is supposed to be "the variant allele"
##           but, in our study it turns out our variant allele is MAJOR
##
##  History: originally named IFNAR1_analysis.R
##           then:IFNAR1_analysis_v2.R
##
#            in this practice, I am elaborating on all the cases:
##  Case-I:
##        We assumed three genotypes AA AB BB, with these three genotypes
##        We tested: additive effects with glm (logistic model) assuming
##        genetic mode, 0, 1, 2 case. The p-value will be similar to the
##        trend test
##        Cohr
##=========================================================================
setwd ("x:/project2018/RSV_association_study/study_with_IFNAR1/")
source ("analysisFuncs.R")
##=========================================
##  Prepare the association analysis data
##=========================================
load("SNP_file_BPIIFA1_to_MYD88.rda")
load("clinic_dt.rda")
SNP_ifnar1 = "seq.rs2257167"
column2use = which(colnames(sheetIN) %in% SNP_ifnar1)
snp.name = SNP_ifnar1
#column2use
SAT_phenotype_col =  6
#snp.name <- colnames(sheetIN)[column2use]
#snp.name
geno.pheno <- cbind(sheetIN[,column2use], dt[,SAT_phenotype_col])
geno.pheno <- as.data.frame(geno.pheno)
##==================================================
##  This is VERY important that for now we HAVE TO
##  flip the genotype coding!
##  Genotyp coding scema:
##                0 : homozygous reference allele
##                1 : heterozygous ref/SNP
##                2 : homozygous variant allele
##==================================================
geno.pheno[,1] <-  abs (geno.pheno[,1] - 2)
table (geno.pheno[,1])
##====================================================
##  OKAY, from now on, we can proceed with the study
##====================================================
colnames(geno.pheno) <- c ("SNP", "SAT")
rownames(geno.pheno) <- dt$RSV.ID
##  Here, we are looking at all the SNP
##  regardless of RSV infection status
data_all <- geno.pheno
#str(dt$RSV.ID)
#str(geno.pheno)
##  ONLY use RSV positive for the following analyses!!
row2use <-  which(dt$RSV == 1)
geno.pheno <- geno.pheno [row2use ,]
##  Exclude individual with missing SNP information
if (length(which(is.na(geno.pheno[,1]))) > 0) {
geno.pheno <-  geno.pheno[-which(is.na(geno.pheno[,1])),]
}
str(geno.pheno)
##=============================
##  SNP frequency assessment
##=============================
# 1 For all SNP/indivudual
d1 <- as.data.frame(table (data_all[,1]))
REFF <- (d1$Freq[1]*2 + d1$Freq[2])/(sum(d1$Freq)*2)
VARF <- (d1$Freq[3]*2 + d1$Freq[2])/(sum(d1$Freq)*2)
case.1 <- c(REFF , VARF )
# 2 SNP from indivudual with RSV positive
d2 <- as.data.frame(table (geno.pheno[,1]))
REFF2 <- (d2$Freq[1]*2 + d2$Freq[2])/(sum(d2$Freq)*2)
VARF2 <- (d2$Freq[3]*2 + d2$Freq[2])/(sum(d2$Freq)*2)
case.2 <- c(REFF2 , VARF2 )
snp.freq <- as.data.frame (rbind (case.1, case.2))
colnames (snp.freq) <- c("Reference allele (G) frequency", "Variant allele (C) frequency")
rownames (snp.freq) <- c("ALL individual", "Individual with RSV positive")
snp.freq
table(geno.pheno)
table(geno.pheno[,1])
##  So, there are more reference genotypes than SNP genotypes
##  If we code it as numeric -- trend test
m <- as.data.frame(geno.pheno)
summary(glm(m[,2] ~ m[,1], family=binomial("logit")))
summary(glm(m[,2] ~ as.factor(m[,1]), family=binomial("logit")))
counts  <- as.matrix(table (m))
chisq.test(counts)
multiCA.test(counts)
multiCA.test(t(counts))
table(geno.pheno[,1])
m <- as.data.frame(geno.pheno)
m[which(m[,1] == 2),1] = 1
table (m)
table (m[,1])
m2 <- as.data.frame(geno.pheno)
m2[which(m2[,1] == 2),1] = 1
table (m2[,1])
summary(glm(m2[,2] ~ m2[,1], family=binomial("logit")))
summary(glm(m2[,2] ~ as.factor(m2[,1]), family=binomial("logit")))
exp(summary(tmp.logistic)$coefficients[2,1] +  qnorm(c(0.025,0.5,0.975)) *summary(tmp.logistic)$coefficients[2,2])
table(geno.pheno[,1])
#   0   1   2
# 219 149  33
# case 2
##     AA  |   AB/BB
##    collapse 1 and 2 to 1
m3 <- as.data.frame(geno.pheno)
m3[which(m3[,1] == 1),1] = 0
table (m3[,1])
summary(glm(m3[,2] ~ as.factor(m3[,1]), family=binomial("logit")))
exp(summary(tmp.logistic)$coefficients[2,1])
exp(summary(tmp.logistic)$coefficients[2,1] +  qnorm(c(0.025,0.5,0.975)) *summary(tmp.logistic)$coefficients[2,2])
tmp.logistic= glm(m3[,2] ~ as.factor(m3[,1]), family=binomial("logit"))
exp(summary(tmp.logistic)$coefficients[2,1])
exp(summary(tmp.logistic)$coefficients[2,1] +  qnorm(c(0.025,0.5,0.975)) *summary(tmp.logistic)$coefficients[2,2])
summary(glm(m3[,2] ~ as.factor(m3[,1]), family=binomial("logit")))
exp(-0.5221)
tmp.logistic= glm(m2[,2] ~ m2[,1], family=binomial("logit"))
tmp.logistic= glm(m2[,2] ~ as.factor(m2[,1]), family=binomial("logit"))
summary(glm(m2[,2] ~ as.factor(m2[,1]), family=binomial("logit")))
exp(summary(tmp.logistic)$coefficients[2,1])
exp(summary(tmp.logistic)$coefficients[2,1] +  qnorm(c(0.025,0.5,0.975)) *summary(tmp.logistic)$coefficients[2,2])
summary(glm(m3[,2] ~ as.factor(m3[,1]), family=binomial("logit")))
tmp.logistic= glm(m3[,2] ~ as.factor(m3[,1]), family=binomial("logit"))
exp(summary(tmp.logistic)$coefficients[2,1])
exp(summary(tmp.logistic)$coefficients[2,1] +  qnorm(c(0.025,0.5,0.975)) *summary(tmp.logistic)$coefficients[2,2])
m
str(m)
str(m1)
str(m2)
str(m3)
table(m)
table(m1)
table(m2)
table(m2)
table(m3)
table(m)
table(m2)
table(m3)
str(dt)
(length(which(is.na(geno.pheno[,1]))) > 0)
##=========================================================================
##  File: IFNAR1_analysis_manuscript_part_1.R
##
##  Author: Jianying Li
##  Purpose: to analyze the association of the genetic effect of
##           a functional/coding SNP "rs2257167" on the disease
##           phenotypes (severe vs. mild), and generate odds
##           ratio and confident interval
##  Comment: this study was originally from the Golden Gate project
##           from 2016 with major analytical component in the
##           analysisFuncs.R. There are five panels for genotyping
##           only one "BPIIFA1(PLUNC) to MYD88" has this SNP.
##
##           Genotyp coding scema:
##                0 : homozygous reference allele
##                1 : heterozygous ref/SNP
##                2 : homozygous variant allele
##
##           In the convention, normally 0 refers to the "minor allele"
##           which is supposed to be "the variant allele"
##           but, in our study it turns out our variant allele is MAJOR
##
##  History: originally named IFNAR1_analysis.R
##           then:IFNAR1_analysis_v2.R
##
#            in this practice, I am elaborating on all the cases:
##  Case-I:
##        We assumed three genotypes AA AB BB, with these three genotypes
##        We tested: additive effects with glm (logistic model) assuming
##        genetic mode, 0, 1, 2 case. The p-value will be similar to the
##        trend test
##        Cohr
##=========================================================================
setwd ("x:/project2018/RSV_association_study/study_with_IFNAR1/")
source ("analysisFuncs.R")
##=========================================
##  Prepare the association analysis data
##=========================================
load("SNP_file_BPIIFA1_to_MYD88.rda")
load("clinic_dt.rda")
SNP_ifnar1 = "seq.rs2257167"
column2use = which(colnames(sheetIN) %in% SNP_ifnar1)
snp.name = SNP_ifnar1
#column2use
SAT_phenotype_col =  6
#snp.name <- colnames(sheetIN)[column2use]
#snp.name
geno.pheno <- cbind(sheetIN[,column2use], dt[,SAT_phenotype_col])
geno.pheno <- as.data.frame(geno.pheno)
##==================================================
##  This is VERY important that for now we HAVE TO
##  flip the genotype coding!
##  Genotyp coding scema:
##                0 : homozygous reference allele
##                1 : heterozygous ref/SNP
##                2 : homozygous variant allele
##==================================================
geno.pheno[,1] <-  abs (geno.pheno[,1] - 2)
table (geno.pheno[,1])
#0   1   2
#396 286  55
##====================================================
##  OKAY, from now on, we can proceed with the study
##====================================================
colnames(geno.pheno) <- c ("SNP", "SAT")
rownames(geno.pheno) <- dt$RSV.ID
##  Here, we are looking at all the SNP
##  regardless of RSV infection status
data_all <- geno.pheno
#str(dt$RSV.ID)
#str(geno.pheno)
##  ONLY use RSV positive for the following analyses!!
row2use <-  which(dt$RSV == 1)
geno.pheno <- geno.pheno [row2use ,]
(length(which(is.na(geno.pheno[,1])))
> 0 )
which(is.na(geno.pheno[,1])
)
str(geno.pheno)
str(data_all)
str(dt)
str(sheetIN)
cov.dt <- dt[row2use ,]
str(cov.dt)
str(geno.pheno)
##  Exclude individual with missing SNP information
if (length(which(is.na(geno.pheno[,1]))) > 0) {
geno.pheno <-  geno.pheno[-which(is.na(geno.pheno[,1])),]
cov.dt <- cov.dt[-which(is.na(geno.pheno[,1])) ,]
}
str(geno.pheno)
str(cov.dt)
cov.dt <- dt[row2use ,]
str(cov.dt)
which(is.na(geno.pheno[,1]))
##=========================================================================
##  File: IFNAR1_analysis_manuscript_part_1.R
##
##  Author: Jianying Li
##  Purpose: to analyze the association of the genetic effect of
##           a functional/coding SNP "rs2257167" on the disease
##           phenotypes (severe vs. mild), and generate odds
##           ratio and confident interval
##  Comment: this study was originally from the Golden Gate project
##           from 2016 with major analytical component in the
##           analysisFuncs.R. There are five panels for genotyping
##           only one "BPIIFA1(PLUNC) to MYD88" has this SNP.
##
##           Genotyp coding scema:
##                0 : homozygous reference allele
##                1 : heterozygous ref/SNP
##                2 : homozygous variant allele
##
##           In the convention, normally 0 refers to the "minor allele"
##           which is supposed to be "the variant allele"
##           but, in our study it turns out our variant allele is MAJOR
##
##  History: originally named IFNAR1_analysis.R
##           then:IFNAR1_analysis_v2.R
##
#            in this practice, I am elaborating on all the cases:
##  Case-I:
##        We assumed three genotypes AA AB BB, with these three genotypes
##        We tested: additive effects with glm (logistic model) assuming
##        genetic mode, 0, 1, 2 case. The p-value will be similar to the
##        trend test
##        Cohr
##=========================================================================
setwd ("x:/project2018/RSV_association_study/study_with_IFNAR1/")
source ("analysisFuncs.R")
##=========================================
##  Prepare the association analysis data
##=========================================
load("SNP_file_BPIIFA1_to_MYD88.rda")
load("clinic_dt.rda")
SNP_ifnar1 = "seq.rs2257167"
column2use = which(colnames(sheetIN) %in% SNP_ifnar1)
snp.name = SNP_ifnar1
#column2use
SAT_phenotype_col =  6
#snp.name <- colnames(sheetIN)[column2use]
#snp.name
geno.pheno <- cbind(sheetIN[,column2use], dt[,SAT_phenotype_col])
geno.pheno <- as.data.frame(geno.pheno)
##==================================================
##  This is VERY important that for now we HAVE TO
##  flip the genotype coding!
##  Genotyp coding scema:
##                0 : homozygous reference allele
##                1 : heterozygous ref/SNP
##                2 : homozygous variant allele
##==================================================
geno.pheno[,1] <-  abs (geno.pheno[,1] - 2)
table (geno.pheno[,1])
#0   1   2
#396 286  55
##====================================================
##  OKAY, from now on, we can proceed with the study
##====================================================
colnames(geno.pheno) <- c ("SNP", "SAT")
rownames(geno.pheno) <- dt$RSV.ID
##  Here, we are looking at all the SNP
##  regardless of RSV infection status
data_all <- geno.pheno
#str(dt$RSV.ID)
#str(geno.pheno)
str(geno.pheno)
str(dt$RSV.ID)
row2use <-  which(dt$RSV == 1)
row2use
geno.pheno <- geno.pheno [row2use ,]
cov.dt <- dt[row2use ,]
(length(which(is.na(geno.pheno[,1]))) > 0)
##  Exclude individual with missing SNP information
if (length(which(is.na(geno.pheno[,1]))) > 0) {
geno.pheno <-  geno.pheno[-which(is.na(geno.pheno[,1])),]
cov.dt <- cov.dt[-which(is.na(geno.pheno[,1])) ,]
}
str(geno.pheno)
str(cov.dt)
##=========================================================================
##  File: IFNAR1_analysis_manuscript_part_1.R
##
##  Author: Jianying Li
##  Purpose: to analyze the association of the genetic effect of
##           a functional/coding SNP "rs2257167" on the disease
##           phenotypes (severe vs. mild), and generate odds
##           ratio and confident interval
##  Comment: this study was originally from the Golden Gate project
##           from 2016 with major analytical component in the
##           analysisFuncs.R. There are five panels for genotyping
##           only one "BPIIFA1(PLUNC) to MYD88" has this SNP.
##
##           Genotyp coding scema:
##                0 : homozygous reference allele
##                1 : heterozygous ref/SNP
##                2 : homozygous variant allele
##
##           In the convention, normally 0 refers to the "minor allele"
##           which is supposed to be "the variant allele"
##           but, in our study it turns out our variant allele is MAJOR
##
##  History: originally named IFNAR1_analysis.R
##           then:IFNAR1_analysis_v2.R
##
#            in this practice, I am elaborating on all the cases:
##  Case-I:
##        We assumed three genotypes AA AB BB, with these three genotypes
##        We tested: additive effects with glm (logistic model) assuming
##        genetic mode, 0, 1, 2 case. The p-value will be similar to the
##        trend test
##        Cohr
##=========================================================================
setwd ("x:/project2018/RSV_association_study/study_with_IFNAR1/")
source ("analysisFuncs.R")
##=========================================
##  Prepare the association analysis data
##=========================================
load("SNP_file_BPIIFA1_to_MYD88.rda")
load("clinic_dt.rda")
SNP_ifnar1 = "seq.rs2257167"
column2use = which(colnames(sheetIN) %in% SNP_ifnar1)
snp.name = SNP_ifnar1
#column2use
SAT_phenotype_col =  6
#snp.name <- colnames(sheetIN)[column2use]
#snp.name
geno.pheno <- cbind(sheetIN[,column2use], dt[,SAT_phenotype_col])
geno.pheno <- as.data.frame(geno.pheno)
##==================================================
##  This is VERY important that for now we HAVE TO
##  flip the genotype coding!
##  Genotyp coding scema:
##                0 : homozygous reference allele
##                1 : heterozygous ref/SNP
##                2 : homozygous variant allele
##==================================================
geno.pheno[,1] <-  abs (geno.pheno[,1] - 2)
table (geno.pheno[,1])
#0   1   2
#396 286  55
##====================================================
##  OKAY, from now on, we can proceed with the study
##====================================================
colnames(geno.pheno) <- c ("SNP", "SAT")
rownames(geno.pheno) <- dt$RSV.ID
##  Here, we are looking at all the SNP
##  regardless of RSV infection status
data_all <- geno.pheno
#str(dt$RSV.ID)
#str(geno.pheno)
##  ONLY use RSV positive for the following analyses!!
row2use <-  which(dt$RSV == 1)
geno.pheno <- geno.pheno [row2use ,]
cov.dt <- dt[row2use ,]
##  Exclude individual with missing SNP information
if (length(which(is.na(geno.pheno[,1]))) > 0) {
missing.row = which(is.na(geno.pheno[,1]))
geno.pheno <-  geno.pheno[-missing.row,]
cov.dt <- cov.dt[-missing.row ,]
}
str(geno.pheno)
str(cov.dt)
m.gender <- cbind (m, cov.dt$GENDER)
m.gender
colnames(m.gender)
colnames(m.gender) <- c (colnames(m), "Gender")
colnames(m.gender)
rownames(m.gender)
colnames(m.gender) <- c (colnames(m), "Region")
m.gender <- cbind (m, cov.dt$Breastfeeding)
colnames(m.gender) <- c (colnames(m), "Breastfeeding")
m.gender <- cbind (m, cov.dt$GENDER)
colnames(m.gender) <- c (colnames(m), "Gender")
##==========================================================================
##  Analysis with covariates: region
##==========================================================================
m.Region <- cbind (m, cov.dt$REGION)
colnames(m.Region) <- c (colnames(m), "Region")
##==========================================================================
##  Analysis with covariates: breastfeeding
##==========================================================================
m.Breastfeeding <- cbind (m, cov.dt$Breastfeeding)
colnames(m.Breastfeeding) <- c (colnames(m), "Breastfeeding")
##==========================================================================
##  Analysis with covariates: social-status
##==========================================================================
m.SAT<- cbind (m, cov.dt$SAT)
colnames(m.SAT) <- c (colnames(m), "SAT")
colnames(m.gender)
colnames(m.Region)
colnames(m.Breastfeeding)
colnames(m.SAT)
colnames(dt)
m.SES<- cbind (m, cov.dt$SES)
colnames(m.SES) <- c (colnames(m), "SES")
colnames(m.SES)
summary(glm(SAT ~ SNP + Gender, data = m.gender, family=binomial("logit")))
summary(glm(SAT ~ SNP + Redion, data = m.Region, family=binomial("logit")))
summary(glm(SAT ~ SNP + Region, data = m.Region, family=binomial("logit")))
summary(glm(SAT ~ SNP + Breastfeeding, data = m.Breastfeeding, family=binomial("logit")))
summary(glm(SAT ~ SNP + SES, data = m.SES, family=binomial("logit")))
m2.gender <- cbind (m2, cov.dt$GENDER)
colnames(m2.gender) <- c (colnames(m), "Gender")
summary(glm(SAT ~ SNP + Gender, data = m2.gender, family=binomial("logit")))
summary(glm(SAT ~ as.factor(SNP) + Gender, data = m2.gender, family=binomial("logit")))
m3.gender <- cbind (m, cov.dt$GENDER)
colnames(m3.gender) <- c (colnames(m), "Gender")
summary(glm(SAT ~ as.factor(SNP) + Gender, data = m3.gender, family=binomial("logit")))
summary(glm(SAT ~ as.factor(SNP) + Gender, data = m2.gender, family=binomial("logit")))
summary(glm(SAT ~ as.factor(SNP) + Gender, data = m3.gender, family=binomial("logit")))
exp(summary(m3.logistic)$coefficients[2,1] +  qnorm(c(0.025,0.5,0.975)) *summary(m3.logistic)$coefficients[2,2])
m3.logistic= glm(m3[,2] ~ as.factor(m3[,1]), family=binomial("logit"))
exp(summary(m3.logistic)$coefficients[2,1])
exp(summary(m3.logistic)$coefficients[2,1] +  qnorm(c(0.025,0.5,0.975)) *summary(m3.logistic)$coefficients[2,2])
summary(glm(m3[,2] ~ as.factor(m3[,1]), family=binomial("logit")))
summary(glm(m2[,2] ~ as.factor(m2[,1]), family=binomial("logit")))
